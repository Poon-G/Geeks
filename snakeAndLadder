#include<iostream>
#include<queue>

int BFS(int g[]){
    bool visited[30]={false};
    std::queue<int>q;
    int dist[30]={0};
    q.push(0);
    visited[0]=true;

    while(!q.empty()){
        int x = q.front();
       
        if(x==29)
        return dist[x];
        
        for(int i=1;i<=6;++i){
            if(!visited[x+i] && (x+i)<=30){
                if(g[x+i]==0)
                    g[x+i] =(x+i);
               
                visited[x+i]=true;
                dist[g[x+i]] =dist[i]+1;
                std::cout<<x<<" "<<g[x+i]<<" "<<dist[g[x+i]]<<"\n";
                q.push(g[x+i]);
            }
            
        }
        q.pop();
    }
    return -1;
}

int main()
{
    int T;
    std::cin>>T;
    while(T--){
        int n;
        std::cin>>n;
        int game[30]={0};
        for(int i=0;i<n;++i){
            int a,b;
            std::cin>>a>>b;
            game[a-1]=b-1;
        }

        std::cout<<BFS(game)<<"\n";
    }
}
